#summary Sub Graphs and Ranks

= Description =

Demonstration of how sub graphs and ranking can help with the layout of graphs.

= Graph =

http://fluentdot.googlecode.com/svn/wiki/Images/DemoSubGraphsAndRanks.png

= Code =

{{{
            return Fluently.CreateDirectedGraph()
                .SubGraphs.Add(s => s.WithName("c0")
                                        .WithRank(RankType.Maximum)
                                        .Edges.Add(edge =>
                                                       {
                                                           edge.From.NodeWithName("a").To.NodeWithName("b");
                                                           edge.From.NodeWithName("b").To.NodeWithName("c");
                                                           edge.From.NodeWithName("c").To.NodeWithName("d");
                                                       })
                )
                .SubGraphs.Add(s => s.WithName("c1")
                                        .WithRank(RankType.Maximum)
                                        .Edges.Add(edge =>
                                                       {
                                                           edge.From.NodeWithName("d").To.NodeWithName("e");
                                                           edge.From.NodeWithName("e").To.NodeWithName("f");
                                                           edge.From.NodeWithName("f").To.NodeWithName("g");
                                                       })
                                                      )
                 .SubGraphs.Add(s => s.WithName("c2")
                                        .WithRank(RankType.Maximum)
                                        .Edges.Add(edge =>
                                                       {
                                                           edge.From.NodeWithName("g").To.NodeWithName("h");
                                                           edge.From.NodeWithName("h").To.NodeWithName("i");
                                                           edge.From.NodeWithName("i").To.NodeWithName("j");
                                                       }))
                .SubGraphs.Add(s => s.WithName("c3")
                                        .WithRank(RankType.Maximum)
                                        .Edges.Add(edge =>
                                                       {
                                                           edge.From.NodeWithName("j").To.NodeWithName("k");
                                                           edge.From.NodeWithName("k").To.NodeWithName("l");
                                                           edge.From.NodeWithName("l").To.NodeWithName("m");
                                                       }))
                .SubGraphs.Add(s => s.WithName("c4")
                                        .WithRank(RankType.Minimum)
                                        .Edges.Add(edge =>
                                                       {
                                                           edge.From.NodeWithName("m").To.NodeWithName("n");
                                                           edge.From.NodeWithName("n").To.NodeWithName("o");
                                                           edge.From.NodeWithName("o").To.NodeWithName("p");
                                                       }))
            .Edges.Add(edge => {
                edge.From.NodeWithName("aa").To.NodeWithName("a");
                edge.From.NodeWithName("dd").To.NodeWithName("d");
                edge.From.NodeWithName("gg").To.NodeWithName("g");
                edge.From.NodeWithName("jj").To.NodeWithName("j");
                edge.From.NodeWithName("mm").To.NodeWithName("m");
                edge.From.NodeWithName("aa").To.NodeWithName("dd");
                edge.From.NodeWithName("dd").To.NodeWithName("gg");
                edge.From.NodeWithName("gg").To.NodeWithName("jj");
                edge.From.NodeWithName("jj").To.NodeWithName("mm");
            });

}}}

= Dot Produced =

{{{
digraph "DirectedGraph" {

subgraph "c0" {
graph [rank="max"];



"a";
"b";
"c";
"d";

"a" -> "b";
"b" -> "c";
"c" -> "d";

}
subgraph "c1" {
graph [rank="max"];



"e";
"f";
"g";

"d" -> "e";
"e" -> "f";
"f" -> "g";

}
subgraph "c2" {
graph [rank="max"];



"h";
"i";
"j";

"g" -> "h";
"h" -> "i";
"i" -> "j";

}
subgraph "c3" {
graph [rank="max"];



"k";
"l";
"m";

"j" -> "k";
"k" -> "l";
"l" -> "m";

}
subgraph "c4" {
graph [rank="min"];



"n";
"o";
"p";

"m" -> "n";
"n" -> "o";
"o" -> "p";

}

"aa";
"dd";
"gg";
"jj";
"mm";

"aa" -> "a";
"dd" -> "d";
"gg" -> "g";
"jj" -> "j";
"mm" -> "m";
"aa" -> "dd";
"dd" -> "gg";
"gg" -> "jj";
"jj" -> "mm";

}
}}}