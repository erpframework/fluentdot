#summary Clusters

= Description =

A demo of how clusters can be used to partition a graph.

= Graph =

http://fluentdot.googlecode.com/svn/wiki/Images/DemoClusters.png

= Code =

{{{
            return Fluently.CreateDirectedGraph()
                .Clusters.Add(c0 => c0
                                        .WithName("c0")
                                        .Edges.Add(edges =>
                                                       {
                                                           edges.From.NodeWithName("a0").To.NodeWithName("a1");
                                                           edges.From.NodeWithName("a1").To.NodeWithName("a2");
                                                           edges.From.NodeWithName("a2").To.NodeWithName("a3");
                                                       })
                )
                .Clusters.Add(c1 => c1
                                        .WithName("c1")
                                        .WithBackgroundColor(Color.Gainsboro)
                                        .Edges.Add(edges =>
                                                       {
                                                           edges.From.NodeWithName("b0").To.NodeWithName("b1");
                                                           edges.From.NodeWithName("b1").To.NodeWithName("b2");
                                                           edges.From.NodeWithName("b2").To.NodeWithName("b3");
                                                       }) 
                )
                .Edges.Add(edges =>
                               {
                                   edges.From.NodeWithName("x").To.NodeWithName("a0");
                                   edges.From.NodeWithName("x").To.NodeWithName("b0");
                                   edges.From.NodeWithName("a1").To.NodeWithName("b1");
                                   edges.From.NodeWithName("a3").To.NodeWithName("a0");
                                   edges.From.NodeWithName("a3").To.NodeWithName("z");
                                   edges.From.NodeWithName("b3").To.NodeWithName("z");
                               });

}}}

= Dot Produced =

{{{
digraph "DirectedGraph" {

subgraph "clusterc0" {


"a0";
"a1";
"a2";
"a3";

"a0" -> "a1";
"a1" -> "a2";
"a2" -> "a3";

}
subgraph "clusterc1" {
graph [bgcolor="#dcdcdc"];



"b0";
"b1";
"b2";
"b3";

"b0" -> "b1";
"b1" -> "b2";
"b2" -> "b3";

}

"x";
"z";

"x" -> "a0";
"x" -> "b0";
"a1" -> "b1";
"a3" -> "a0";
"a3" -> "z";
"b3" -> "z";

}
}}}