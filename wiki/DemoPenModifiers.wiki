#summary Pen Modifiers

= Description =

A demo of how the drawing pen can be modified.

= Graph =

http://fluentdot.googlecode.com/svn/wiki/Images/DemoPenModifiers.png

= Code =

{{{
            return Fluently.CreateDirectedGraph()
                .Nodes.Add(nodes =>
                               {
                                   nodes.WithName("a");
                                   nodes.WithName("b").WithPenWidth(2.0).WithLabel("Pen Width : 2.0");
                                   nodes.WithName("c");
                                   nodes.WithName("d").WithPenWidth(3.0).WithLabel("Pen Width : 3.0");
                               })
                .Clusters.Add(cluster => cluster
                                             .WithName("sub")
                                             .Nodes.Add(nodes =>
                                                            {
                                                                nodes.WithName("e");
                                                                nodes.WithName("f").WithPenWidth(1.5).WithLabel("Pen Width : 1.5");
                                                                nodes.WithName("g");
                                                                nodes.WithName("h").WithPenWidth(0).WithLabel("Pen Width : 0");
                                                            })
                                             .WithPenColor(Color.Red)
                                             .WithPenWidth(2.0)
                                             .WithLabel("Red pen color, 2.0 Width"))
                .Edges.Add(edges =>
                               {
                                   edges.From.NodeWithName("a").To.NodeWithName("b");
                                   edges.From.NodeWithName("b").To.NodeWithName("c");
                                   edges.From.NodeWithName("b").To.NodeWithName("d");
                                   edges.From.NodeWithName("c").To.NodeWithName("d").WithPenWidth(2.0).WithLabel("Pen Width : 2.0");
                                   edges.From.NodeWithName("b").To.NodeWithName("e");
                                   edges.From.NodeWithName("e").To.NodeWithName("f");
                                   edges.From.NodeWithName("e").To.NodeWithName("g");
                                   edges.From.NodeWithName("g").To.NodeWithName("h");
                                   edges.From.NodeWithName("f").To.NodeWithName("g").WithPenWidth(3.0).WithLabel("Pen Width : 3.0");
                                   edges.From.NodeWithName("g").To.NodeWithName("a");
                               });

}}}

= Dot Produced =

{{{
digraph "DirectedGraph" {

subgraph "clustersub" {
graph [pencolor="#ff0000", penwidth=2, label="Red pen color, 2.0 Width"];



"e";
"f" [penwidth=1.5, label="Pen Width : 1.5"];
"g";
"h" [penwidth=0, label="Pen Width : 0"];


}

"a";
"b" [penwidth=2, label="Pen Width : 2.0"];
"c";
"d" [penwidth=3, label="Pen Width : 3.0"];

"a" -> "b";
"b" -> "c";
"b" -> "d";
"c" -> "d" [penwidth=2, label="Pen Width : 2.0"];
"b" -> "e";
"e" -> "f";
"e" -> "g";
"g" -> "h";
"f" -> "g" [penwidth=3, label="Pen Width : 3.0"];
"g" -> "a";

}
}}}